Create a classic Snake game using Python and Pygame. Control the snake to eat fruits while avoiding collisions with walls and its own body. Customize levels, speed, and power-ups for an engaging gaming experience.

Please recreate a classic Snake game using Python and Pygame. It is a timeless arcade classic where the player navigates a continuously moving snake, aiming to consume items, typically depicted as fruits or dots, to increase its length. The primary challenge lies in avoiding collisions with the game's boundaries, the snake's own growing tail, and any additional obstacles that may be present. Gameplay involves directional control, usually through keyboard or on-screen inputs, to steer the snake in one of four directions: up, down, left, or right. The game's difficulty escalates as the snake grows, making maneuvering more complex. Key features include a scoring system based on items consumed, with potential bonus items offering higher scores or special abilities like temporary invincibility. Design considerations focus on smooth controls, clear visuals, a balanced difficulty curve, and an engaging interface to cater to varying skill levels. The game's aesthetic can range from simple to elaborate, tailored to the target audience, ensuring a compelling gameplay experience that tests players' reflexes and strategic planning.

Please recreate the game pong where there are two paddles, one on each side of the screen, and a ball bouncing in the middle. If the ball hits a paddle, it should bounce back towards the other side of the screen. If a player misses the ball, they should lose a point. One player should use the S and W key to move their paddle up and down, while player 2 should use the up and down on the arrow pad. The game should go to 5 and after that, you should say who the winner and loser is.